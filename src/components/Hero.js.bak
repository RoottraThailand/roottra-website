"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var framer_motion_1 = require("framer-motion");
var Hero = function () {
    var canvasRef = (0, react_1.useRef)(null);
    (0, react_1.useEffect)(function () {
        var canvas = canvasRef.current;
        if (!canvas)
            return;
        var ctx = canvas.getContext('2d');
        if (!ctx)
            return;
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        // Particle class for animated background
        var Particle = /** @class */ (function () {
            function Particle() {
                this.x = Math.random() * canvas.width;
                this.y = Math.random() * canvas.height;
                this.size = Math.random() * 3 + 1;
                this.speedX = Math.random() * 1 - 0.5;
                this.speedY = Math.random() * 1 - 0.5;
                this.color = "rgba(0, ".concat(Math.floor(Math.random() * 100) + 155, ", ").concat(Math.floor(Math.random() * 50), ", ").concat(Math.random() * 0.5 + 0.1, ")");
            }
            Particle.prototype.update = function () {
                this.x += this.speedX;
                this.y += this.speedY;
                if (this.x > canvas.width || this.x < 0) {
                    this.speedX = -this.speedX;
                }
                if (this.y > canvas.height || this.y < 0) {
                    this.speedY = -this.speedY;
                }
            };
            Particle.prototype.draw = function () {
                ctx.fillStyle = this.color;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.fill();
            };
            return Particle;
        }());
        var particleArray = [];
        var numberOfParticles = 100;
        for (var i = 0; i < numberOfParticles; i++) {
            particleArray.push(new Particle());
        }
        function connectParticles() {
            for (var a = 0; a < particleArray.length; a++) {
                for (var b = a; b < particleArray.length; b++) {
                    var dx = particleArray[a].x - particleArray[b].x;
                    var dy = particleArray[a].y - particleArray[b].y;
                    var distance = Math.sqrt(dx * dx + dy * dy);
                    if (distance < 100) {
                        ctx.strokeStyle = "rgba(0, ".concat(Math.floor(Math.random() * 100) + 155, ", ").concat(Math.floor(Math.random() * 50), ", ").concat(0.1, ")");
                        ctx.lineWidth = 1;
                        ctx.beginPath();
                        ctx.moveTo(particleArray[a].x, particleArray[a].y);
                        ctx.lineTo(particleArray[b].x, particleArray[b].y);
                        ctx.stroke();
                    }
                }
            }
        }
        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            for (var i = 0; i < particleArray.length; i++) {
                particleArray[i].update();
                particleArray[i].draw();
            }
            connectParticles();
            requestAnimationFrame(animate);
        }
        animate();
        var handleResize = function () {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        };
        window.addEventListener('resize', handleResize);
        return function () {
            window.removeEventListener('resize', handleResize);
        };
    }, []);
    return (<div className="relative h-screen flex items-center justify-center overflow-hidden bg-black">
      <canvas ref={canvasRef} className="absolute top-0 left-0 w-full h-full"/>
      <div className="relative z-10 text-center px-4">
        <framer_motion_1.motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.8 }} className="mb-8">
          <img src="/logo.png" alt="Roottra Logo" className="mx-auto w-64 md:w-80 lg:w-96"/>
        </framer_motion_1.motion.div>
        <framer_motion_1.motion.h2 initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.8, delay: 0.3 }} className="text-xl md:text-2xl lg:text-3xl font-light text-white mb-8">
          Transforming Climate Data for a Sustainable Future
        </framer_motion_1.motion.h2>
        <framer_motion_1.motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.8, delay: 0.6 }}>
          <a href="#mission" className="inline-block px-8 py-3 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors duration-300">
            Learn More
          </a>
        </framer_motion_1.motion.div>
      </div>
    </div>);
};
exports.default = Hero;
